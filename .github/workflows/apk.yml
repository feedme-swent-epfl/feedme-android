name: APK Building
# Run the workflow when commits are pushed on main or when a PR is modified
on:
  push:
    branches:
      - main

permissions:
    contents: write
      
jobs:
    build:
      name: Build Release APK
      runs-on: ubuntu-latest
  
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

    # We create several files needed to add our secrets (google services, keystore data for app signing) for correct build of app
      - name: Create Google Service and Keystore files
        run: |
          cat /home/runner/work/feedme-android/app/google-services.json | base64
          cat /home/runner/work/feedme-android/upload-keystore.jks | base64
          cat /home/runner/work/feedme-android/keystore.properties | base64
    
    # We load the secrets to the corresponding files
      - name: Load Google Service and Keystore files
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_FILE }}
          ENCODED_PASSWORDS: ${{ secrets.KEYSTORE_PASSWORDS }}
        run: |
          echo $DATA | base64 -di > app/google-services.json
          echo $ENCODED_KEYSTORE | base64 -di > upload-keystore.jks
          echo $ENCODED_PASSWORDS | base64 -di > keystore.properties

      - name: Get local.properties from secrets
        run:
          echo "${{secrets.LOCAL_PROPERTIES }}" > $GITHUB_WORKSPACE/local.properties

      - name: Set up Gradle cache
        uses: gradle/actions/setup-gradle@v3
  
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
  
      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Get the path of our apk file
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Upload APK in artifacts
        uses: actions/upload-artifact@v4
        with:
          name: feedme-apk
          path: ${{ steps.releaseApk.outputs.apkfile }}
          if-no-files-found: error

      - name: Upload APK in a draft release branch
        uses: softprops/action-gh-release@v2
        with:
          name: FeedMe
          files: ${{ steps.releaseApk.outputs.apkfile }}
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
        
    